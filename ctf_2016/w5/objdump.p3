
./p3:     file format elf32-i386


Disassembly of section .init:

08048318 <_init>:
 8048318:	53                   	push   ebx
 8048319:	83 ec 08             	sub    esp,0x8
 804831c:	e8 af 00 00 00       	call   80483d0 <__x86.get_pc_thunk.bx>
 8048321:	81 c3 df 1c 00 00    	add    ebx,0x1cdf
 8048327:	8b 83 fc ff ff ff    	mov    eax,DWORD PTR [ebx-0x4]
 804832d:	85 c0                	test   eax,eax
 804832f:	74 05                	je     8048336 <_init+0x1e>
 8048331:	e8 3a 00 00 00       	call   8048370 <__gmon_start__@plt>
 8048336:	83 c4 08             	add    esp,0x8
 8048339:	5b                   	pop    ebx
 804833a:	c3                   	ret    

Disassembly of section .plt:

08048340 <gets@plt-0x10>:
 8048340:	ff 35 04 a0 04 08    	push   DWORD PTR ds:0x804a004
 8048346:	ff 25 08 a0 04 08    	jmp    DWORD PTR ds:0x804a008
 804834c:	00 00                	add    BYTE PTR [eax],al
	...

08048350 <gets@plt>:
 8048350:	ff 25 0c a0 04 08    	jmp    DWORD PTR ds:0x804a00c
 8048356:	68 00 00 00 00       	push   0x0
 804835b:	e9 e0 ff ff ff       	jmp    8048340 <_init+0x28>

08048360 <puts@plt>:
 8048360:	ff 25 10 a0 04 08    	jmp    DWORD PTR ds:0x804a010
 8048366:	68 08 00 00 00       	push   0x8
 804836b:	e9 d0 ff ff ff       	jmp    8048340 <_init+0x28>

08048370 <__gmon_start__@plt>:
 8048370:	ff 25 14 a0 04 08    	jmp    DWORD PTR ds:0x804a014
 8048376:	68 10 00 00 00       	push   0x10
 804837b:	e9 c0 ff ff ff       	jmp    8048340 <_init+0x28>

08048380 <__libc_start_main@plt>:
 8048380:	ff 25 18 a0 04 08    	jmp    DWORD PTR ds:0x804a018
 8048386:	68 18 00 00 00       	push   0x18
 804838b:	e9 b0 ff ff ff       	jmp    8048340 <_init+0x28>

08048390 <setvbuf@plt>:
 8048390:	ff 25 1c a0 04 08    	jmp    DWORD PTR ds:0x804a01c
 8048396:	68 20 00 00 00       	push   0x20
 804839b:	e9 a0 ff ff ff       	jmp    8048340 <_init+0x28>

Disassembly of section .text:

080483a0 <_start>:
 80483a0:	31 ed                	xor    ebp,ebp
 80483a2:	5e                   	pop    esi
 80483a3:	89 e1                	mov    ecx,esp
 80483a5:	83 e4 f0             	and    esp,0xfffffff0
 80483a8:	50                   	push   eax
 80483a9:	54                   	push   esp
 80483aa:	52                   	push   edx
 80483ab:	68 50 85 04 08       	push   0x8048550
 80483b0:	68 f0 84 04 08       	push   0x80484f0
 80483b5:	51                   	push   ecx
 80483b6:	56                   	push   esi
 80483b7:	68 9d 84 04 08       	push   0x804849d
 80483bc:	e8 bf ff ff ff       	call   8048380 <__libc_start_main@plt>
 80483c1:	f4                   	hlt    
 80483c2:	66 90                	xchg   ax,ax
 80483c4:	66 90                	xchg   ax,ax
 80483c6:	66 90                	xchg   ax,ax
 80483c8:	66 90                	xchg   ax,ax
 80483ca:	66 90                	xchg   ax,ax
 80483cc:	66 90                	xchg   ax,ax
 80483ce:	66 90                	xchg   ax,ax

080483d0 <__x86.get_pc_thunk.bx>:
 80483d0:	8b 1c 24             	mov    ebx,DWORD PTR [esp]
 80483d3:	c3                   	ret    
 80483d4:	66 90                	xchg   ax,ax
 80483d6:	66 90                	xchg   ax,ax
 80483d8:	66 90                	xchg   ax,ax
 80483da:	66 90                	xchg   ax,ax
 80483dc:	66 90                	xchg   ax,ax
 80483de:	66 90                	xchg   ax,ax

080483e0 <deregister_tm_clones>:
 80483e0:	b8 2b a0 04 08       	mov    eax,0x804a02b
 80483e5:	2d 28 a0 04 08       	sub    eax,0x804a028
 80483ea:	83 f8 06             	cmp    eax,0x6
 80483ed:	77 01                	ja     80483f0 <deregister_tm_clones+0x10>
 80483ef:	c3                   	ret    
 80483f0:	b8 00 00 00 00       	mov    eax,0x0
 80483f5:	85 c0                	test   eax,eax
 80483f7:	74 f6                	je     80483ef <deregister_tm_clones+0xf>
 80483f9:	55                   	push   ebp
 80483fa:	89 e5                	mov    ebp,esp
 80483fc:	83 ec 18             	sub    esp,0x18
 80483ff:	c7 04 24 28 a0 04 08 	mov    DWORD PTR [esp],0x804a028
 8048406:	ff d0                	call   eax
 8048408:	c9                   	leave  
 8048409:	c3                   	ret    
 804840a:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]

08048410 <register_tm_clones>:
 8048410:	b8 28 a0 04 08       	mov    eax,0x804a028
 8048415:	2d 28 a0 04 08       	sub    eax,0x804a028
 804841a:	c1 f8 02             	sar    eax,0x2
 804841d:	89 c2                	mov    edx,eax
 804841f:	c1 ea 1f             	shr    edx,0x1f
 8048422:	01 d0                	add    eax,edx
 8048424:	d1 f8                	sar    eax,1
 8048426:	75 01                	jne    8048429 <register_tm_clones+0x19>
 8048428:	c3                   	ret    
 8048429:	ba 00 00 00 00       	mov    edx,0x0
 804842e:	85 d2                	test   edx,edx
 8048430:	74 f6                	je     8048428 <register_tm_clones+0x18>
 8048432:	55                   	push   ebp
 8048433:	89 e5                	mov    ebp,esp
 8048435:	83 ec 18             	sub    esp,0x18
 8048438:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
 804843c:	c7 04 24 28 a0 04 08 	mov    DWORD PTR [esp],0x804a028
 8048443:	ff d2                	call   edx
 8048445:	c9                   	leave  
 8048446:	c3                   	ret    
 8048447:	89 f6                	mov    esi,esi
 8048449:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

08048450 <__do_global_dtors_aux>:
 8048450:	80 3d 2c a0 04 08 00 	cmp    BYTE PTR ds:0x804a02c,0x0
 8048457:	75 13                	jne    804846c <__do_global_dtors_aux+0x1c>
 8048459:	55                   	push   ebp
 804845a:	89 e5                	mov    ebp,esp
 804845c:	83 ec 08             	sub    esp,0x8
 804845f:	e8 7c ff ff ff       	call   80483e0 <deregister_tm_clones>
 8048464:	c6 05 2c a0 04 08 01 	mov    BYTE PTR ds:0x804a02c,0x1
 804846b:	c9                   	leave  
 804846c:	f3 c3                	repz ret 
 804846e:	66 90                	xchg   ax,ax

08048470 <frame_dummy>:
 8048470:	a1 10 9f 04 08       	mov    eax,ds:0x8049f10
 8048475:	85 c0                	test   eax,eax
 8048477:	74 1f                	je     8048498 <frame_dummy+0x28>
 8048479:	b8 00 00 00 00       	mov    eax,0x0
 804847e:	85 c0                	test   eax,eax
 8048480:	74 16                	je     8048498 <frame_dummy+0x28>
 8048482:	55                   	push   ebp
 8048483:	89 e5                	mov    ebp,esp
 8048485:	83 ec 18             	sub    esp,0x18
 8048488:	c7 04 24 10 9f 04 08 	mov    DWORD PTR [esp],0x8049f10
 804848f:	ff d0                	call   eax
 8048491:	c9                   	leave  
 8048492:	e9 79 ff ff ff       	jmp    8048410 <register_tm_clones>
 8048497:	90                   	nop
 8048498:	e9 73 ff ff ff       	jmp    8048410 <register_tm_clones>

0804849d <main>:
 804849d:	55                   	push   ebp
 804849e:	89 e5                	mov    ebp,esp
 80484a0:	83 e4 f0             	and    esp,0xfffffff0
 80484a3:	83 ec 20             	sub    esp,0x20
 80484a6:	a1 28 a0 04 08       	mov    eax,ds:0x804a028
 80484ab:	c7 44 24 0c 00 00 00 	mov    DWORD PTR [esp+0xc],0x0
 80484b2:	00 
 80484b3:	c7 44 24 08 02 00 00 	mov    DWORD PTR [esp+0x8],0x2
 80484ba:	00 
 80484bb:	c7 44 24 04 00 00 00 	mov    DWORD PTR [esp+0x4],0x0
 80484c2:	00 
 80484c3:	89 04 24             	mov    DWORD PTR [esp],eax
 80484c6:	e8 c5 fe ff ff       	call   8048390 <setvbuf@plt>
 80484cb:	8d 44 24 16          	lea    eax,[esp+0x16]
 80484cf:	89 04 24             	mov    DWORD PTR [esp],eax
 80484d2:	e8 79 fe ff ff       	call   8048350 <gets@plt>
 80484d7:	8d 44 24 16          	lea    eax,[esp+0x16]
 80484db:	89 04 24             	mov    DWORD PTR [esp],eax
 80484de:	e8 7d fe ff ff       	call   8048360 <puts@plt>
 80484e3:	b8 00 00 00 00       	mov    eax,0x0
 80484e8:	c9                   	leave  
 80484e9:	c3                   	ret    
 80484ea:	66 90                	xchg   ax,ax
 80484ec:	66 90                	xchg   ax,ax
 80484ee:	66 90                	xchg   ax,ax

080484f0 <__libc_csu_init>:
 80484f0:	55                   	push   ebp
 80484f1:	57                   	push   edi
 80484f2:	31 ff                	xor    edi,edi
 80484f4:	56                   	push   esi
 80484f5:	53                   	push   ebx
 80484f6:	e8 d5 fe ff ff       	call   80483d0 <__x86.get_pc_thunk.bx>
 80484fb:	81 c3 05 1b 00 00    	add    ebx,0x1b05
 8048501:	83 ec 0c             	sub    esp,0xc
 8048504:	8b 6c 24 20          	mov    ebp,DWORD PTR [esp+0x20]
 8048508:	8d b3 0c ff ff ff    	lea    esi,[ebx-0xf4]
 804850e:	e8 05 fe ff ff       	call   8048318 <_init>
 8048513:	8d 83 08 ff ff ff    	lea    eax,[ebx-0xf8]
 8048519:	29 c6                	sub    esi,eax
 804851b:	c1 fe 02             	sar    esi,0x2
 804851e:	85 f6                	test   esi,esi
 8048520:	74 23                	je     8048545 <__libc_csu_init+0x55>
 8048522:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
 8048528:	83 ec 04             	sub    esp,0x4
 804852b:	ff 74 24 2c          	push   DWORD PTR [esp+0x2c]
 804852f:	ff 74 24 2c          	push   DWORD PTR [esp+0x2c]
 8048533:	55                   	push   ebp
 8048534:	ff 94 bb 08 ff ff ff 	call   DWORD PTR [ebx+edi*4-0xf8]
 804853b:	83 c7 01             	add    edi,0x1
 804853e:	83 c4 10             	add    esp,0x10
 8048541:	39 f7                	cmp    edi,esi
 8048543:	75 e3                	jne    8048528 <__libc_csu_init+0x38>
 8048545:	83 c4 0c             	add    esp,0xc
 8048548:	5b                   	pop    ebx
 8048549:	5e                   	pop    esi
 804854a:	5f                   	pop    edi
 804854b:	5d                   	pop    ebp
 804854c:	c3                   	ret    
 804854d:	8d 76 00             	lea    esi,[esi+0x0]

08048550 <__libc_csu_fini>:
 8048550:	f3 c3                	repz ret 

Disassembly of section .fini:

08048554 <_fini>:
 8048554:	53                   	push   ebx
 8048555:	83 ec 08             	sub    esp,0x8
 8048558:	e8 73 fe ff ff       	call   80483d0 <__x86.get_pc_thunk.bx>
 804855d:	81 c3 a3 1a 00 00    	add    ebx,0x1aa3
 8048563:	83 c4 08             	add    esp,0x8
 8048566:	5b                   	pop    ebx
 8048567:	c3                   	ret    
